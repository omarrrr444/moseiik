name: CI

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
      	#for both architecture
        architecture: [x86_64, arm64]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
      
    - name: Install Docker #command lines from the previous labs
      run: |
        sudo apt-get update
        sudo apt-get install ca-certificates curl gnupg
        sudo install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        sudo chmod a+r /etc/apt/keyrings/docker.gpg
        echo \
        "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
        $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
        sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

    - name: Set up QEMU (for ARM)
      if: matrix.architecture == 'arm64' #only for the ARM architecture
      run: |
        sudo apt-get install qemu binfmt-support qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Build and test Docker image #with both architecture
      run: |
        docker build --platform=${{ matrix.architecture }} -t moseiik:latest -f Dockerfile .
        docker run moseiik:latest cargo test

